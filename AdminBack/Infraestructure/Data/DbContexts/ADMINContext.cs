// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace AdminBack.Models;

public partial class ADMINContext : DbContext
{
    public ADMINContext()
    {
    }

    public ADMINContext(DbContextOptions<ADMINContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AccesoUsuario> AccesoUsuarios { get; set; }

    public virtual DbSet<ModuloAdmin> ModuloAdmins { get; set; }

    public virtual DbSet<Rol> Rols { get; set; }

    public virtual DbSet<Sesion> Sesions { get; set; }

    public virtual DbSet<SubModuloAdmin> SubModuloAdmins { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-S935ES7\\SQLEXPRESS01;Initial Catalog=ADMIN;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AccesoUsuario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__AccesoUs__3214EC0749E38D72");

            entity.ToTable("AccesoUsuario", tb => tb.HasTrigger("trg_UpdateAccesoUsuario"));

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.IdRolNavigation).WithMany(p => p.AccesoUsuarios)
                .HasForeignKey(d => d.IdRol)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__AccesoUsu__IdRol__4AB81AF0");

            entity.HasOne(d => d.IdSubModuloNavigation).WithMany(p => p.AccesoUsuarios)
                .HasForeignKey(d => d.IdSubModulo)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__AccesoUsu__IdSub__49C3F6B7");
        });

        modelBuilder.Entity<ModuloAdmin>(entity =>
        {
            entity.HasKey(e => e.IdModuloAdmin).HasName("PK__ModuloAd__2EF1D4004B3036B0");

            entity.ToTable("ModuloAdmin", tb =>
                {
                    tb.HasTrigger("trg_DeleteModuloAdmin");
                    tb.HasTrigger("trg_UpdateModuloAdmin");
                });

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Icono)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Rol>(entity =>
        {
            entity.HasKey(e => e.IdRol).HasName("PK__Rol__2A49584CA488992E");

            entity.ToTable("Rol", tb =>
                {
                    tb.HasTrigger("trg_DeleteRol");
                    tb.HasTrigger("trg_UpdateRol");
                });

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Sesion>(entity =>
        {
            entity.HasKey(e => e.IdSesion).HasName("PK__Sesion__22EC535B8ACF7AA8");

            entity.ToTable("Sesion");

            entity.HasIndex(e => e.IdUsuario, "UQ__Sesion__5B65BF9664A32223").IsUnique();

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.FechaExpiracion).HasColumnType("datetime");
            entity.Property(e => e.FechaInicio).HasColumnType("datetime");
            entity.Property(e => e.Token).HasDefaultValueSql("(newid())");

            entity.HasOne(d => d.IdUsuarioNavigation).WithOne(p => p.Sesion)
                .HasForeignKey<Sesion>(d => d.IdUsuario)
                .HasConstraintName("FK__Sesion__IdUsuari__5070F446");
        });

        modelBuilder.Entity<SubModuloAdmin>(entity =>
        {
            entity.HasKey(e => e.IdSubModulo).HasName("PK__SubModul__A49BAFCBEDA57CE6");

            entity.ToTable("SubModuloAdmin", tb =>
                {
                    tb.HasTrigger("trg_DeleteSubModuloAdmin");
                    tb.HasTrigger("trg_UpdateSubModuloAdmin");
                });

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Icono)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Ruta)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.IdModuloNavigation).WithMany(p => p.SubModuloAdmins)
                .HasForeignKey(d => d.IdModulo)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__SubModulo__IdMod__3F466844");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.IdUsuario).HasName("PK__Usuario__5B65BF978CE2FAE1");

            entity.ToTable("Usuario", tb =>
                {
                    tb.HasTrigger("trg_DeleteUsuario");
                    tb.HasTrigger("trg_UpdateUsuario");
                });

            entity.HasIndex(e => e.Correo, "UQ__Usuario__60695A19575C410D").IsUnique();

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.Correo)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Usuario1)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Usuario");

            entity.HasOne(d => d.IdRolNavigation).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.IdRol)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("FK__Usuario__IdRol__45F365D3");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}